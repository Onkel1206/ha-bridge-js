{"version":3,"sources":["webpack:///webpack/bootstrap 320157d02a0d3efac4d7?3141","webpack:///./serviceworker/index.js"],"names":["staticCacheName","version","updateStaticCache","caches","open","then","cache","addAll","self","addEventListener","event","waitUntil","keys","Promise","all","filter","key","indexOf","map","delete","request","method","respondWith","fetch","catch","match","headers","get","mode","Request","url","credentials","redirect","response","copy","clone","put","Response"],"mappings":"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","file":"sw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 320157d02a0d3efac4d7","  /*\n  from https://gist.github.com/adactio/fbaa3a5952774553f5e7\n\n  https://googlechrome.github.io/samples/service-worker/custom-offline-page/\n  https://github.com/phamann/embrace-the-network/blob/master/src/stale-while-revalidate/sw.js\n  https://github.com/GoogleChrome/sw-toolbox#defining-routes\n  https://github.com/mozilla/serviceworker-cookbook/tree/master/virtual-server\n\n  OTHER:\n  https://googlechrome.github.io/samples/service-worker/post-message/index.html\n  */\n\n    // Update 'version' if you need to refresh the cache\n    var staticCacheName = 'static';\n    var version = 'v2::';\n\n    // Store core files in a cache (including a page to display when offline)\n    function updateStaticCache() {\n        return caches.open(version + staticCacheName)\n            .then(function (cache) {\n                return cache.addAll([\n                    'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css',\n                    'https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css',\n                    'https://fonts.googleapis.com/css?family=Open+Sans',\n                    'https://fonts.gstatic.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2',\n                    'https://netdna.bootstrapcdn.com/font-awesome/4.0.3/fonts/fontawesome-webfont.woff?v=4.0.3',\n                    'offline.html'\n                ]);\n            });\n    }\n\n    self.addEventListener('install', function (event) {\n        event.waitUntil(updateStaticCache());\n    });\n\n    self.addEventListener('activate', function (event) {\n        event.waitUntil(\n            caches.keys()\n                .then(function (keys) {\n                    // Remove caches whose name is no longer valid\n                    return Promise.all(keys\n                        .filter(function (key) {\n                          return key.indexOf(version) !== 0;\n                        })\n                        .map(function (key) {\n                          return caches.delete(key);\n                        })\n                    );\n                })\n        );\n    });\n\n    self.addEventListener('fetch', function (event) {\n        var request = event.request;\n        // Always fetch non-GET requests from the network\n        if (request.method !== 'GET') {\n            event.respondWith(\n                fetch(request)\n                    .catch(function () {\n                        return caches.match('offline.html');\n                    })\n            );\n            return;\n        }\n\n        // For HTML requests, try the network first, fall back to the cache, finally the offline page\n        if (!!~request.headers.get('Accept').indexOf('text/html') || !!~request.headers.get('Accept').indexOf('application/json')) {\n            // Fix for Chrome bug: https://code.google.com/p/chromium/issues/detail?id=573937\n            if (request.mode != 'navigate') {\n                request = new Request(request.url, {\n                    method: 'GET',\n                    headers: request.headers,\n                    mode: request.mode,\n                    credentials: request.credentials,\n                    redirect: request.redirect\n                });\n            }\n            event.respondWith(\n                fetch(request)\n                    .then(function (response) {\n                        // Stash a copy of this page in the cache\n                        var copy = response.clone();\n                        caches.open(version + staticCacheName)\n                            .then(function (cache) {\n                                cache.put(request, copy);\n                            });\n                        return response;\n                    })\n                    .catch(function () {\n                        return caches.match(request)\n                            .then(function (response) {\n                                return response || caches.match('offline.html');\n                            });\n                    })\n            );\n            return;\n        }\n\n        // For non-HTML requests, look in the cache first, fall back to the network\n        event.respondWith(\n            caches.match(request)\n                .then(function (response) {\n                    return response || fetch(request)\n                        .catch(function () {\n                            // If the request is for an image, show an offline placeholder\n                            if (request.headers.get('Accept').indexOf('image') !== -1) {\n                                return new Response('<svg width=\"400\" height=\"300\" role=\"img\" aria-labelledby=\"offline-title\" viewBox=\"0 0 400 300\" xmlns=\"http://www.w3.org/2000/svg\"><title id=\"offline-title\">Offline</title><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#D8D8D8\" d=\"M0 0h400v300H0z\"/><text fill=\"#9B9B9B\" font-family=\"Helvetica Neue,Arial,Helvetica,sans-serif\" font-size=\"72\" font-weight=\"bold\"><tspan x=\"93\" y=\"172\">offline</tspan></text></g></svg>', { headers: { 'Content-Type': 'image/svg+xml' }});\n                            }\n                        });\n                })\n        );\n    });\n\n\n\n// WEBPACK FOOTER //\n// ./serviceworker/index.js"],"sourceRoot":""}